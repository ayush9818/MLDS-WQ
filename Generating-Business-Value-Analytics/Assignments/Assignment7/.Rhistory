knitr::opts_chunk$set(echo = TRUE)
#packages required
library(readxl); library(stringr); library(knitr); library(kableExtra); library(lme4); library(ggplot2)
# import data
concessions = data.frame(read_excel(
"ConcessionSalesData_ForClass.xlsx"))
# import data
concessions = data.frame(read_excel(
"ConcessionSalesData_ForClass.xlsx"))
names(concessions)[names(concessions) == 'MENUITEMNAME'] = 'item'
names(concessions)[names(concessions) == 'total_product_rev_nonSTH'] = 'nonSTHrev'
items = c('BTL DEJA BLUE', 'HOT DOG', 'NACHOS', 'BAG PEANUTS',
'SOUV POPCORN', 'BAVARIAN PRETZEL', 'SOUV CUP 32')
names=c('BtlWater','HotDog','Nachos','Peanuts','Popcorn','Pretzel','SouvCup')
for(i in 1:length(items)){
concessions$item[concessions$item == items[i]] = names[i]
}
# compute prices
concessions$price=concessions$PRICES*
(1-concessions$Discount.Percentage/100)
# subset to remove items we don't care about
concessions = subset(concessions, price>0)
concessions2 = subset(concessions, special_item=="Yes")
#get unique games
weekly=concessions2[!duplicated(concessions$game_week),17:23]
#get unique games
weekly=concessions2[!duplicated(concessions$game_week),17:23]
weekly
# change column and row names
colnames(weekly)=str_replace(colnames(weekly),"Discount_",'')
rownames(weekly)=unique(concessions$game_week)
kable(weekly, "pipe") #display
ac = aggregate(UseCount ~ game_week + item
+ price + nonSTHrev
+ Discount.Percentage + Discount_HotDog
+ Discount_SouvCup + Discount_BtlWater
+ Discount_Peanuts + Discount_Nachos
+ Discount_Pretzel + Discount_Popcorn,
concessions2, sum)
#kable_styling(kable(ac[1:6,1:6], "latex"), font_size = 6)
ac=ac[order(ac$item),] # order by item
ac
fits = lmList(log(UseCount) ~ log(price) + log(nonSTHrev)
| item, data=ac)
fit_table = function(fits){
sum=sapply(coef(fits), sprintf, fmt = "%.2f")
pv=summary(fits)$coefficients[,4,]<.05
colnames(sum)[1]='Intercept'
if(nrow(sum) == length(names)){ rownames(sum)=names}
for(r in 1:nrow(sum)){
for(c in 1:ncol(sum)){
if(pv[r,c]){ sum[r,c]=cell_spec(sum[r,c], bold=T)}
}
}
return(sum)
}
sum = fit_table(fits)
kable(sum, "pipe", align=c(rep('r',times=ncol(sum))))
model.df <- data.frame(x = ac$price,y = exp(fitted(fits)), z=ac$item) # get predictions
ggplot(ac, aes(x=price, y=UseCount, color=item)) + geom_point() + geom_smooth(method=lm, formula=(y~exp(-x)), data = model.df, aes(x, y, color = z), se=FALSE) + xlab("Price ($)") + ylab("Sales") + labs(color = "Item")
users = aggregate(Discount.Percentage ~ UserID,
concessions, min)
kable(table(users$Discount.Percentage), col.names=c('Discount','STHs'), "pipe", align=c(rep('r',times=2)))
users = aggregate(Discount.Percentage ~ UserID,
concessions, min)
users = aggregate(Discount.Percentage ~ UserID,
concessions, min)
kable(table(users$Discount.Percentage), col.names=c('Discount','STHs'), "pipe", align=c(rep('r',times=2)))
# import data
concessions = data.frame(read_excel(
"ConcessionSalesData_ForClass.xlsx"))
concessions
# import data
concessions = data.frame(read_excel(
"ConcessionSalesData_ForClass.xlsx"))
concessions
names(concessions)[names(concessions) == 'MENUITEMNAME'] = 'item'
names(concessions)[names(concessions) == 'total_product_rev_nonSTH'] = 'nonSTHrev'
items = c('BTL DEJA BLUE', 'HOT DOG', 'NACHOS', 'BAG PEANUTS',
'SOUV POPCORN', 'BAVARIAN PRETZEL', 'SOUV CUP 32')
names=c('BtlWater','HotDog','Nachos','Peanuts','Popcorn','Pretzel','SouvCup')
for(i in 1:length(items)){
concessions$item[concessions$item == items[i]] = names[i]
}
# compute prices
concessions$price=concessions$PRICES*
(1-concessions$Discount.Percentage/100)
# subset to remove items we don't care about
concessions = subset(concessions, price>0)
concessions2 = subset(concessions, special_item=="Yes")
#get unique games
weekly=concessions2[!duplicated(concessions$game_week),17:23]
weekly
# change column and row names
colnames(weekly)=str_replace(colnames(weekly),"Discount_",'')
rownames(weekly)=unique(concessions$game_week)
kable(weekly, "pipe") #display
ac = aggregate(UseCount ~ game_week + item
+ price + nonSTHrev
+ Discount.Percentage + Discount_HotDog
+ Discount_SouvCup + Discount_BtlWater
+ Discount_Peanuts + Discount_Nachos
+ Discount_Pretzel + Discount_Popcorn,
concessions2, sum)
knitr::opts_chunk$set(echo = TRUE)
#packages required
library(readxl); library(stringr); library(knitr); library(kableExtra); library(lme4); library(ggplot2)
# import data
concessions = data.frame(read_excel(
"ConcessionSalesData_ForClass.xlsx"))
concessions
names(concessions)[names(concessions) == 'MENUITEMNAME'] = 'item'
names(concessions)[names(concessions) == 'total_product_rev_nonSTH'] = 'nonSTHrev'
items = c('BTL DEJA BLUE', 'HOT DOG', 'NACHOS', 'BAG PEANUTS',
'SOUV POPCORN', 'BAVARIAN PRETZEL', 'SOUV CUP 32')
names=c('BtlWater','HotDog','Nachos','Peanuts','Popcorn','Pretzel','SouvCup')
for(i in 1:length(items)){
concessions$item[concessions$item == items[i]] = names[i]
}
# compute prices
concessions$price=concessions$PRICES*
(1-concessions$Discount.Percentage/100)
# subset to remove items we don't care about
concessions = subset(concessions, price>0)
concessions2 = subset(concessions, special_item=="Yes")
#get unique games
weekly=concessions2[!duplicated(concessions$game_week),17:23]
weekly
# change column and row names
colnames(weekly)=str_replace(colnames(weekly),"Discount_",'')
rownames(weekly)=unique(concessions$game_week)
kable(weekly, "pipe") #display
ac = aggregate(UseCount ~ game_week + item
+ price + nonSTHrev
+ Discount.Percentage + Discount_HotDog
+ Discount_SouvCup + Discount_BtlWater
+ Discount_Peanuts + Discount_Nachos
+ Discount_Pretzel + Discount_Popcorn,
concessions2, sum)
ac=ac[order(ac$item),] # order by item
ac
ac = aggregate(UseCount ~ game_week + item
+ price + nonSTHrev
+ Discount.Percentage + Discount_HotDog
+ Discount_SouvCup + Discount_BtlWater
+ Discount_Peanuts + Discount_Nachos
+ Discount_Pretzel + Discount_Popcorn,
concessions2, sum)
ac=ac[order(ac$item),] # order by item
ac
# compute prices
concessions$price=concessions$PRICES*
(1-concessions$Discount.Percentage/100)
# subset to remove items we don't care about
concessions = subset(concessions, price>0)
concessions2 = subset(concessions, special_item=="Yes")
concessions2
ac=ac[order(ac$item),] # order by item
nrow(ac)
